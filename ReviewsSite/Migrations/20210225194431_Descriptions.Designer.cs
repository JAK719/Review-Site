// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReviewsSite;

namespace ReviewsSite.Migrations
{
    [DbContext(typeof(PizzaContext))]
    [Migration("20210225194431_Descriptions")]
    partial class Descriptions
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ReviewsSite.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ReviewContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReviewScore")
                        .HasColumnType("int");

                    b.Property<string>("ReviewerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ToppingsId")
                        .HasColumnType("int");

                    b.HasKey("ReviewId");

                    b.HasIndex("ToppingsId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            ReviewId = 1,
                            ReviewContent = "If it isn't Doge coin... At least it's shaped like a coin. #SpaceX",
                            ReviewScore = 4,
                            ReviewerName = "Elon Musk",
                            ToppingsId = 1
                        },
                        new
                        {
                            ReviewId = 2,
                            ReviewContent = "Ruh Ro Raggy! Resse Aren't Scooby Snacks!!!",
                            ReviewScore = 2,
                            ReviewerName = "Scooby Doo",
                            ToppingsId = 2
                        },
                        new
                        {
                            ReviewId = 3,
                            ReviewContent = "The only thing better than this topping is the review(Site)",
                            ReviewScore = 5,
                            ReviewerName = "Carlos",
                            ToppingsId = 1
                        },
                        new
                        {
                            ReviewId = 4,
                            ReviewContent = "Pika Pika, Pikachu!",
                            ReviewScore = 1,
                            ReviewerName = "Pikachu",
                            ToppingsId = 2
                        });
                });

            modelBuilder.Entity("ReviewsSite.Models.Toppings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVegetarian")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Toppings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Pepperoni is an American variety of salami, made from cured pork and beef seasoned with paprika or other chili pepper.",
                            Img = "Pepperoni.png",
                            IsVegetarian = false,
                            Name = "Pepperoni"
                        },
                        new
                        {
                            Id = 2,
                            Description = "The mild-flavored, unripe fruit of the bell or sweet pepper, Capsicum annuum grossum, used as a green vegetable.",
                            Img = "GPepper.png",
                            IsVegetarian = true,
                            Name = "Green Pepper"
                        });
                });

            modelBuilder.Entity("ReviewsSite.Models.Review", b =>
                {
                    b.HasOne("ReviewsSite.Models.Toppings", "Toppings")
                        .WithMany("Reviews")
                        .HasForeignKey("ToppingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Toppings");
                });

            modelBuilder.Entity("ReviewsSite.Models.Toppings", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
